"Ранее мы уже познакомились с методами push и pop, которые добавляют и удаляют элементы в конце массива."
"соответствующие методы для добавления и удаления элементов в начале массива называются"
"unshift и shift."

let todoList = [];

function remember(task){
    todoList.push(task);
}

function getTask(){
    return todoList.shift();
}

function rememberUrgently(task){
    todoList.unshift(task);
}

"Чтобы добавить задачу в конец очереди, нужно вызвать функцию remember"
remember("Купить пельменей");
console.log(todoList); //[ 'Купить пельменей' ]

"Когда вы будете готовы что-то сделать, нужно вызвать getTask(), чтобы получить (и удалить) первый элемент из очереди."

console.log(getTask()); //Купить пельменей
console.log(todoList); //[]

"Функция rememberUrgently также добавляет задачу, но не в конец, а в начало очереди."


remember("Сделать домашку");
remember("Подготовиться к парам");
remember("Убраться в комнате"); //[ 'Сделать домашку', 'Подготовиться к парам', 'Убраться в комнате' ]
console.log(todoList);
rememberUrgently("Жётско ботать JavaScript");
console.log(todoList); //['Жётско ботать JavaScript','Сделать домашку','Подготовиться к парам','Убраться в комнате']

"Для поиска определённого значения у массивов есть метод indexOf."
"Этот метод просматривает массив от начала до конца и возвращает индекс, по которому было найдено заданное значение."
"или -1, если оно не было найдено."
"Для поиска с конца существует аналогичный метод"
"lastIndexOf"

console.log([1, 2, 3, 2, 1].indexOf(2)); //1
console.log([1, 2, 3, 2, 1].lastIndexOf(2)); //3

"И indexOf, и lastIndexOf ротгтмают необязательный второй аргумент, который указывает, откуда начать поиск."



"Ещё один фундаментальный метод для работы с массивами - это slice"
"Он принимает начальный и конечный индексы и возвращает массив, содержащий только элементы,"
"расположенные между ними, включая начальный, но исключая конечный индекс."
console.log([0, 1, 2, 3, 4].slice(2, 4)); //[ 2, 3 ]
console.log([0, 1, 2, 3, 4].slice(2)); //[2, 3, 4]
"Если конечный индекс не задан, slice вернёт все элементы, идущие после начального индекса. Можно также опустить начальный индекс,"
"чтобы скопировать весь массив"


"С помощью метода"
"concat"
"можно склеивать массивы, чтобы получить новый, аналогично тому, что делает оператор + для строк."
console.log([0, 1, 2, 3].concat([4, 5, 6])); //[0, 1, 2, 3, 4, 5, 6]


"В следующем примере показано применение concat и slice"
"Функция принимает массив и индекс и возвращает новый массив, являющийся копией исходного массива, из которого"
"удалён элемент, расположенный по указанному индексу."
function remove(array, index){
    return array.slice(0, index).concat(array.slice(index + 1));
}
console.log(remove(["a", "b", "c", "d", "e"], 2)); //[ 'a', 'b', 'd', 'e' ]



