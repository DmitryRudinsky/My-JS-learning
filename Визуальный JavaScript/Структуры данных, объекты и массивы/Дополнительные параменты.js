"Возможность функции принимать любое количество аргументов может быть полезной."
"Например, функция Math.max находит максимальный из всех переданных ей аргументов."

"Для того, чтобы написать такую функцию, нужно поставить три точки перед её последним параметром, например так:"

function max(...arguments){
    let res = -Infinity;
    for(let elem of arguments){
        if(elem > res) res = elem;
    }
    return res;
}

console.log(max(1, 2, 4, 5, -6, -100, 10)); //10

"Когда вызывется такая функция, остаточный параметр привязывается к массиву, содержащему все остальные аргументы."
"Если перед ним есть другие параметры, то их значения не являются частью этого массива."
"Если, как в случае с max, это единственный параметр, то он будет содержать все аргументы."


"Подобную нотацию с многоточием можно использовать для вызова функции с массивом аргументов."
let numbers = [6, 7, 1];
console.log(max(...numbers)); //7

"Таким образом, массив 'развёртывается' в вызове функции, передавая элементы в виде отдельных аргументов."
"Такой массив можно передавть вместе с другими аргументами, например: max(9, ...numbers, 2)"

console.log(max(9, ...[11, 7, 1], 2)); //11
console.log(max(9, [11, 7, 1], 2)); //9


"Подобная запись массива в квадратных скобках позволяет оператору 'многоточие' развернуть один массив внутри другого."
let words = ["никогда", "полностью"];
console.log("Я это", ...words, "не пойму"); //Я это никогда полностью не пойму