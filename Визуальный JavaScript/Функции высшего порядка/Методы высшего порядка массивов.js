"filter являвется стандартным метотдом массива."
"Он не удаляет элементы из существующего массива, а создаёт новый массив, содержащий только те элементы, которые проходят тест."

const SCRIPTS = require("./scripts");

console.log([1, 2, 3, 4, 5, 6, 7, 8, 9, 10].filter(elem => elem <= 4)); //[ 1, 2, 3, 4 ]
//Подробный принцип работы
function filter1(array, test){
    let passed = [];
    for(let elem of array){
        if(test(elem)){
            passed.push(elem);
        }
    }
    return passed;
}

"Метод map преобразует массив, применяя функцию ко всем его элементам и создавая новый массив"
"из возвращаемых значений."
"Новый массив будет иметь ту же длину, что и исходный, но его содержимое будет отображено функцией в новую форму."
// Принцип работы
function map1(array, transform){
    let mapped = [];
    for(let elem of array){
        mapped.push(transform(elem));
    }
    return mapped;
}

console.log([1, 2, 3, 4, 5].map(elem => elem * 10)); //[ 10, 20, 30, 40, 50 ]

"Подобно forEach и filter, map является стандартным методом для массивов."



"Ещё одна распространённая вещь, которую часто делают с массивами, - вычисление одного значения на их основе."
"Операция высшего порядка, которая реализует этот шаблон, называется СОКРАЩЕНИЕМ(свёрткой)."
"Данная операция строит значение путём многократного получения одного элемента из массива и комбинирования его с текущим значением."

"Параметрами функции reduce, кроме массива, являются комбинирующая функция и начальное значение."
//Принцип работы
function reduce1(array, combine, start){
    let current = start;
    for(let element of array){
        current = combine(current, element);
    }
    return current;
}

console.log([1, 2, 3, 4, 5].reduce((a, b) => a + b, 0));